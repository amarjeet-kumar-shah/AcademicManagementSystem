<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
  <title>Academics Tracker</title>
  <link href="https://fonts.googleapis.com/css2?family=Cairo:wght@200;300;400;600;700;900&display=swap"
    rel="stylesheet" />
  <link rel="stylesheet" href="./css/homepage.css" />
  <script src="https://cdn.jsdelivr.net/gh/alpine-collective/alpine-magic-helpers@0.5.x/dist/component.min.js"></script>
  <script src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.7.3/dist/alpine.min.js" defer></script>
</head>

<body>
  <div x-data="setup()" x-init="$refs.loading.classList.add('hidden'); setColors(color);" :class="{ 'dark': isDark}">
    <div class="flex h-screen antialiased text-gray-900 bg-gray-100 dark:bg-dark dark:text-light">
      <!-- Loading screen -->
      <div x-ref="loading"
        class="fixed inset-0 z-50 flex items-center justify-center text-2xl font-semibold text-white bg-primary-darker">
        Loading.....
      </div>

      <!-- Sidebar -->
      <aside class="flex-shrink-0 hidden w-64 bg-white border-r dark:border-primary-darker dark:bg-darker md:block">
        <div class="flex flex-col h-full">
          <!-- Sidebar links -->
          <nav aria-label="Main" class="flex-1 px-2 py-4 space-y-2 overflow-y-hidden hover:overflow-y-auto">
            <!-- Dashboards links -->
            <div x-data="{ isActive: true, open: true}">
              <!-- active & hover classes 'bg-primary-100 dark:bg-primary' -->
              <a href="#"
                class="flex items-center p-2 text-gray-500 transition-colors rounded-md dark:text-light hover:bg-primary-100 dark:hover:bg-primary"
                :class="{'bg-primary-100 dark:bg-primary': isActive || open}" role="button" aria-haspopup="true"
                :aria-expanded="(open || isActive) ? 'true' : 'false'">
                <span aria-hidden="true">
                  <svg class="w-5 h-5" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"
                    stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                      d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
                  </svg>
                </span>
                <span class="ml-2 text-sm"> MENU </span>
                <span class="ml-auto" aria-hidden="true">
                </span>
              </a>
              <div role="menu" x-show="open" class="mt-2 space-y-2 px-7" aria-label="Dashboards">
                <a href="homepage" role="menuitem"
                  class="block p-2 text-sm text-gray-700 transition-colors duration-200 rounded-md dark:text-light dark:hover:text-light hover:text-gray-700">
                  HOME
                </a>
                <a href="seca" role="menuitem"
                  class="block p-2 text-sm text-gray-400 transition-colors duration-200 rounded-md dark:hover:text-light hover:text-gray-700">
                  SEC-A
                </a>
                <a href="secb" role="menuitem"
                  class="block p-2 text-sm text-gray-400 transition-colors duration-200 rounded-md dark:hover:text-light hover:text-gray-700">
                  SEC-B
                </a>
              </div>
            </div>
          </nav>
        </div>
      </aside>

      <div class="flex-1 h-full overflow-x-hidden overflow-y-auto">
        <!-- Navbar -->
        <header class="relative bg-white dark:bg-darker">
          <div class="flex items-center justify-between p-2 border-b dark:border-primary-darker">
            <!-- Mobile menu button -->
            <button @click="isMobileMainMenuOpen = !isMobileMainMenuOpen"
              class="p-1 transition-colors duration-200 rounded-md text-primary-lighter bg-primary-50 hover:text-primary hover:bg-primary-100 dark:hover:text-light dark:hover:bg-primary-dark dark:bg-dark md:hidden focus:outline-none focus:ring">
              <span class="sr-only">Open main manu</span>
              <span aria-hidden="true">
                <svg class="w-8 h-8" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"
                  stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
                </svg>
              </span>
            </button>

            <!-- Brand -->
            <a href="homepage"
              class="inline-block text-2xl font-bold tracking-wider uppercase text-primary-dark dark:text-light">
              ACADEMIC TRACKING SYSTEM
            </a>



            <!-- Desktop Right buttons -->
            <nav aria-label="Secondary" class="hidden space-x-2 md:flex md:items-center">
              <!-- Toggle dark theme button -->
              <button aria-hidden="true" class="relative focus:outline-none" x-cloak @click="toggleTheme">
                <div class="w-12 h-6 transition rounded-full outline-none bg-primary-100 dark:bg-primary-lighter"></div>
                <div
                  class="absolute top-0 left-0 inline-flex items-center justify-center w-6 h-6 transition-all duration-150 transform scale-110 rounded-full shadow-sm"
                  :class="{ 'translate-x-0 -translate-y-px  bg-white text-primary-dark': !isDark, 'translate-x-6 text-primary-100 bg-primary-darker': isDark }">
                  <svg x-show="!isDark" class="w-4 h-4" xmlns="http://www.w3.org/2000/svg" fill="none"
                    viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                      d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
                  </svg>
                  <svg x-show="isDark" class="w-4 h-4" xmlns="http://www.w3.org/2000/svg" fill="none"
                    viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                      d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z" />
                  </svg>
                </div>
              </button>


              <!-- User avatar button -->
              <div class="relative" x-data="{ open: false }">
                <button @click="open = !open; $nextTick(() => { if(open){ $refs.userMenu.focus() } })" type="button"
                  aria-haspopup="true" :aria-expanded="open ? 'true' : 'false'"
                  class="transition-opacity duration-200 rounded-full dark:opacity-75 dark:hover:opacity-100 focus:outline-none focus:ring dark:focus:opacity-100">
                  <span class="sr-only">User menu</span>
                  <img class="w-10 h-10 rounded-full" src="user.png" alt="faculty" />
                </button>
            </nav>

            <!-- Mobile sub menu -->
            <nav x-transition:enter="transition duration-200 ease-in-out transform sm:duration-500"
              x-transition:enter-start="-translate-y-full opacity-0" x-transition:enter-end="translate-y-0 opacity-100"
              x-transition:leave="transition duration-300 ease-in-out transform sm:duration-500"
              x-transition:leave-start="translate-y-0 opacity-100" x-transition:leave-end="-translate-y-full opacity-0"
              x-show="isMobileSubMenuOpen" @click.away="isMobileSubMenuOpen = false"
              class="absolute flex items-center p-4 bg-white rounded-md shadow-lg dark:bg-darker top-16 inset-x-4 md:hidden"
              aria-label="Secondary">
              <div class="space-x-2">
                <!-- Toggle dark theme button -->
                <button aria-hidden="true" class="relative focus:outline-none" x-cloak @click="toggleTheme">
                  <div class="w-12 h-6 transition rounded-full outline-none bg-primary-100 dark:bg-primary-lighter">
                  </div>
                  <div
                    class="absolute top-0 left-0 inline-flex items-center justify-center w-6 h-6 transition-all duration-200 transform scale-110 rounded-full shadow-sm"
                    :class="{ 'translate-x-0 -translate-y-px  bg-white text-primary-dark': !isDark, 'translate-x-6 text-primary-100 bg-primary-darker': isDark }">
                    <svg x-show="!isDark" class="w-4 h-4" xmlns="http://www.w3.org/2000/svg" fill="none"
                      viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
                    </svg>
                    <svg x-show="isDark" class="w-4 h-4" xmlns="http://www.w3.org/2000/svg" fill="none"
                      viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z" />
                    </svg>
                  </div>
                </button>


                <!-- User avatar button -->
                <div class="relative ml-auto" x-data="{ open: false }">
                  <button @click="open = !open" type="button" aria-haspopup="true"
                    :aria-expanded="open ? 'true' : 'false'"
                    class="block transition-opacity duration-200 rounded-full dark:opacity-75 dark:hover:opacity-100 focus:outline-none focus:ring dark:focus:opacity-100">
                    <span class="sr-only">User menu</span>
                    <img class="w-10 h-10 rounded-full" src="user.png" alt="faculty" />
                  </button>
                </div>
            </nav>
          </div>
          <!-- Mobile main manu -->
          <div class="border-b md:hidden dark:border-primary-darker" x-show="isMobileMainMenuOpen"
            @click.away="isMobileMainMenuOpen = false">
            <nav aria-label="Main" class="px-2 py-4 space-y-2">
              <!-- Dashboards links -->
              <div x-data="{ isActive: true, open: true}">
                <!-- active & hover classes 'bg-primary-100 dark:bg-primary' -->
                <a href="#" @click="$event.preventDefault(); open = !open"
                  class="flex items-center p-2 text-gray-500 transition-colors rounded-md dark:text-light hover:bg-primary-100 dark:hover:bg-primary"
                  :class="{'bg-primary-100 dark:bg-primary': isActive || open}" role="button" aria-haspopup="true"
                  :aria-expanded="(open || isActive) ? 'true' : 'false'">
                  <span aria-hidden="true">
                    <svg class="w-5 h-5" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"
                      stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
                    </svg>
                  </span>
                  <span class="ml-2 text-sm"> MENU </span>

                </a>
                <div role="menu" x-show="open" class="mt-2 space-y-2 px-7" aria-label="Dashboards">
                  <!-- active & hover classes 'text-gray-700 dark:text-light' -->
                  <!-- inActive classes 'text-gray-400 dark:text-gray-400' -->
                  <a href="homepage" role="menuitem"
                    class="block p-2 text-sm text-gray-700 transition-colors duration-200 rounded-md dark:text-light dark:hover:text-light hover:text-gray-700">
                    HOME
                  </a>
                  <a href="seca" role="menuitem"
                    class="block p-2 text-sm text-gray-400 transition-colors duration-200 rounded-md dark:hover:text-light hover:text-gray-700">
                    SEC-A
                  </a>
                  <a href="secb" role="menuitem"
                    class="block p-2 text-sm text-gray-400 transition-colors duration-200 rounded-md dark:hover:text-light hover:text-gray-700">
                    SEC-B
                  </a>
                </div>
              </div>
            </nav>
          </div>
        </header>

        <!-- Main content -->
        <main>
          <!-- Content -->
          <div class="mt-2">
            <!-- State cards -->
            <div class="grid grid-cols-1 gap-8 p-4 lg:grid-cols-2 xl:grid-cols-4">

              <!-- Users card -->
              <h4
                class="text-xl font-medium leading-none tracking-wider text-gray-500 uppercase dark:text-primary-light">
                Name : <%= student.name %>
              </h4>
              <h4
                class="text-xl font-medium leading-none tracking-wider text-gray-500 uppercase dark:text-primary-light">
                Roll No : <%= student.roll %>
              </h4>
              <h4
                class="text-xl font-medium leading-none tracking-wider text-gray-500 uppercase dark:text-primary-light">
                Section : <%= student.section %>
              </h4>
              <h4
                class="text-xl font-medium leading-none tracking-wider text-gray-500 uppercase dark:text-primary-light">
                Attendence : <%= parseFloat(student.attendence.toFixed(2)) %>
              </h4>
            </div>
            <br>
            <div class="grid grid-cols-1 p-4 space-y-8 lg:gap-8 lg:space-y-0 lg:grid-cols-2">
              <!-- Bar chart card -->
              <div class="col-span-1 bg-white rounded-md dark:bg-darker" x-data="{ isOn: false }">
                <!-- Card header -->
                <div class="flex justify-center p-4 border-b dark:border-primary">
                  <h4 class="text-lg font-semibold text-gray-500 dark:text-light">MARKS</h4>
                </div>
                <!-- Chart -->
                <div class="relative p-4 h-20 ">
                  <canvas id="barChart"></canvas>
                </div>
              </div>
              <!-- Bar chart card -->
              <div class="col-span-1 bg-white rounded-md dark:bg-darker" x-data="{ isOn: false }">
                <!-- Card header -->
                <div class="flex items-center justify-center p-4 border-b dark:border-primary">
                  <h4 class="text-lg font-semibold text-gray-500 dark:text-light">AVERAGE ATTENDANCE</h4>
                </div>
                <!-- Chart -->
                <div class="relative p-4 h-20 ">
                  <canvas id="barChart"></canvas>
                </div>
              </div>
            </div>
          </div>

          <!-- Two grid columns -->
          <br><br><br>
      </div>

      <!-- All javascript code in this project for now is just for demo DON'T RELY ON IT  -->
      <script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.bundle.min.js"></script>
      <script src="./js/student.js"></script>
      <script>
        const setup = () => {
          const getTheme = () => {
            if (window.localStorage.getItem('dark')) {
              return JSON.parse(window.localStorage.getItem('dark'))
            }

            return !!window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches
          }

          const setTheme = (value) => {
            window.localStorage.setItem('dark', value)
          }

          const getColor = () => {
            if (window.localStorage.getItem('color')) {
              return window.localStorage.getItem('color')
            }
            return 'cyan'
          }

          const setColors = (color) => {
            const root = document.documentElement
            root.style.setProperty('--color-primary', `var(--color-${color})`)
            root.style.setProperty('--color-primary-50', `var(--color-${color}-50)`)
            root.style.setProperty('--color-primary-100', `var(--color-${color}-100)`)
            root.style.setProperty('--color-primary-light', `var(--color-${color}-light)`)
            root.style.setProperty('--color-primary-lighter', `var(--color-${color}-lighter)`)
            root.style.setProperty('--color-primary-dark', `var(--color-${color}-dark)`)
            root.style.setProperty('--color-primary-darker', `var(--color-${color}-darker)`)
            this.selectedColor = color
            window.localStorage.setItem('color', color)
            //
          }

          const updateBarChart = (on) => {
            const data = {
              data: randomData(),
              backgroundColor: 'rgb(207, 250, 254)',
            }
            if (on) {
              barChart.data.datasets.push(data)
              barChart.update()
            } else {
              barChart.data.datasets.splice(1)
              barChart.update()
            }
          }

          const updateDoughnutChart = (on) => {
            const data = random()
            const color = 'rgb(207, 250, 254)'
            if (on) {
              doughnutChart.data.labels.unshift('Seb')
              doughnutChart.data.datasets[0].data.unshift(data)
              doughnutChart.data.datasets[0].backgroundColor.unshift(color)
              doughnutChart.update()
            } else {
              doughnutChart.data.labels.splice(0, 1)
              doughnutChart.data.datasets[0].data.splice(0, 1)
              doughnutChart.data.datasets[0].backgroundColor.splice(0, 1)
              doughnutChart.update()
            }
          }

          const updateLineChart = () => {
            lineChart.data.datasets[0].data.reverse()
            lineChart.update()
          }

          return {
            loading: true,
            isDark: getTheme(),
            toggleTheme() {
              this.isDark = !this.isDark
              setTheme(this.isDark)
            },
            setLightTheme() {
              this.isDark = false
              setTheme(this.isDark)
            },
            setDarkTheme() {
              this.isDark = true
              setTheme(this.isDark)
            },
            color: getColor(),
            selectedColor: 'cyan',
            setColors,
            toggleSidbarMenu() {
              this.isSidebarOpen = !this.isSidebarOpen
            },
            isSettingsPanelOpen: false,
            openSettingsPanel() {
              this.isSettingsPanelOpen = true
              this.$nextTick(() => {
                this.$refs.settingsPanel.focus()
              })
            },
            isNotificationsPanelOpen: false,
            openNotificationsPanel() {
              this.isNotificationsPanelOpen = true
              this.$nextTick(() => {
                this.$refs.notificationsPanel.focus()
              })
            },
            isSearchPanelOpen: false,
            openSearchPanel() {
              this.isSearchPanelOpen = true
              this.$nextTick(() => {
                this.$refs.searchInput.focus()
              })
            },
            isMobileSubMenuOpen: false,
            openMobileSubMenu() {
              this.isMobileSubMenuOpen = true
              this.$nextTick(() => {
                this.$refs.mobileSubMenu.focus()
              })
            },
            isMobileMainMenuOpen: false,
            openMobileMainMenu() {
              this.isMobileMainMenuOpen = true
              this.$nextTick(() => {
                this.$refs.mobileMainMenu.focus()
              })
            },
            updateBarChart,
            updateDoughnutChart,
            updateLineChart,
          }
        }
      </script>
</body>

</html>